{"remainingRequest":"C:\\SSAFY\\git\\s03p23b304\\fe_chat\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\SSAFY\\git\\s03p23b304\\fe_chat\\src\\components\\Chat\\Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\SSAFY\\git\\s03p23b304\\fe_chat\\src\\components\\Chat\\Chat.vue","mtime":1600910340540},{"path":"C:\\SSAFY\\git\\s03p23b304\\fe_chat\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\SSAFY\\git\\s03p23b304\\fe_chat\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\SSAFY\\git\\s03p23b304\\fe_chat\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\SSAFY\\git\\s03p23b304\\fe_chat\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\SSAFY\\git\\s03p23b304\\fe_chat\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBNZXNzYWdlIGZyb20gJy4vcGFydHMvTWVzc2FnZS52dWUnCmltcG9ydCBFbW9qaVBpY2tlciBmcm9tICcuL3BhcnRzL0Vtb2ppUGlja2VyLnZ1ZScKaW1wb3J0IENoYXRzIGZyb20gJy4vcGFydHMvQ2hhdHMudnVlJwppbXBvcnQgKiBhcyBmaXJlYmFzZSBmcm9tICdmaXJlYmFzZScKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbnRlbnQ6ICcnLAogICAgICBjaGF0TWVzc2FnZXM6IFtdLAogICAgICBlbW9qaVBhbmVsOiBmYWxzZSwKICAgICAgY3VycmVudFJlZjoge30sCiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICB0b3RhbENoYXRIZWlnaHQ6IDAKICAgIH0KICB9LAogIHByb3BzOiBbCiAgICAnaWQnCiAgXSwKICBtb3VudGVkICgpIHsKICAgIHRoaXMubG9hZENoYXQoKQogICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2xvYWRPbmxpbmVVc2VycycpCiAgfSwKICBjb21wb25lbnRzOiB7CiAgICAnbWVzc2FnZSc6IE1lc3NhZ2UsCiAgICAnZW1vamktcGlja2VyJzogRW1vamlQaWNrZXIsCiAgICAnY2hhdHMnOiBDaGF0cwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIG1lc3NhZ2VzICgpIHsKICAgICAgcmV0dXJuIHRoaXMuY2hhdE1lc3NhZ2VzCiAgICB9LAogICAgdXNlcm5hbWUgKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy51c2VyLnVzZXJuYW1lCiAgICB9LAogICAgb25OZXdNZXNzYWdlQWRkZWQgKCkgewogICAgICBjb25zdCB0aGF0ID0gdGhpcwogICAgICBsZXQgb25OZXdNZXNzYWdlQWRkZWQgPSBmdW5jdGlvbiAoc25hcHNob3QsIG5ld01lc3NhZ2UgPSB0cnVlKSB7CiAgICAgICAgbGV0IG1lc3NhZ2UgPSBzbmFwc2hvdC52YWwoKQogICAgICAgIG1lc3NhZ2Uua2V5ID0gc25hcHNob3Qua2V5CiAgICAgICAgLyplc2xpbnQtZGlzYWJsZSAqLwogICAgICAgIHZhciB1cmxQYXR0ZXJuID0gLyhcYihodHRwcz98ZnRwfGZpbGUpOlwvXC9bLUEtWjAtOSsmQCNcLyU/PX5ffCE6LC47XSpbLUEtWjAtOSsmQCNcLyU9fl98XSkvaWcKICAgICAgICAvKmVzbGludC1lbmFibGUgKi8KICAgICAgICBtZXNzYWdlLmNvbnRlbnQgPSBtZXNzYWdlLmNvbnRlbnQKICAgICAgICAgIC5yZXBsYWNlKC8mL2csICcmYW1wOycpCiAgICAgICAgICAucmVwbGFjZSgvPC9nLCAnJmx0OycpCiAgICAgICAgICAucmVwbGFjZSgvPi9nLCAnJmd0OycpCiAgICAgICAgICAucmVwbGFjZSgvIi9nLCAnJnF1b3Q7JykKICAgICAgICAgIC5yZXBsYWNlKC8nL2csICcmIzAzOTsnKQogICAgICAgIG1lc3NhZ2UuY29udGVudCA9IG1lc3NhZ2UuY29udGVudC5yZXBsYWNlKHVybFBhdHRlcm4sICI8YSBocmVmPSckMSc+JDE8L2E+IikKICAgICAgICBpZiAoIW5ld01lc3NhZ2UpIHsKICAgICAgICAgIHRoYXQuY2hhdE1lc3NhZ2VzLnVuc2hpZnQodGhhdC5wcm9jZXNzTWVzc2FnZShtZXNzYWdlKSkKICAgICAgICAgIHRoYXQuc2Nyb2xsVG8oKQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGF0LmNoYXRNZXNzYWdlcy5wdXNoKHRoYXQucHJvY2Vzc01lc3NhZ2UobWVzc2FnZSkpCiAgICAgICAgICB0aGF0LnNjcm9sbFRvRW5kKCkKICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIG9uTmV3TWVzc2FnZUFkZGVkCiAgICB9CiAgfSwKICB3YXRjaDogewogICAgJyRyb3V0ZS5wYXJhbXMuaWQnIChuZXdJZCwgb2xkSWQpIHsKICAgICAgdGhpcy5jdXJyZW50UmVmLm9mZignY2hpbGRfYWRkZWQnLCB0aGlzLm9uTmV3TWVzc2FnZUFkZGVkKQogICAgICB0aGlzLmxvYWRDaGF0KCkKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGxvYWRDaGF0ICgpIHsKICAgICAgdGhpcy50b3RhbENoYXRIZWlnaHQgPSB0aGlzLiRyZWZzLmNoYXRDb250YWluZXIuc2Nyb2xsSGVpZ2h0CiAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlCiAgICAgIGlmICh0aGlzLmlkICE9PSB1bmRlZmluZWQpIHsKICAgICAgICB0aGlzLmNoYXRNZXNzYWdlcyA9IFtdCiAgICAgICAgbGV0IGNoYXRJRCA9IHRoaXMuaWQKICAgICAgICB0aGlzLmN1cnJlbnRSZWYgPSBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZignbWVzc2FnZXMnKS5jaGlsZChjaGF0SUQpLmNoaWxkKCdtZXNzYWdlcycpLmxpbWl0VG9MYXN0KDIwKQogICAgICAgIHRoaXMuY3VycmVudFJlZi5vbignY2hpbGRfYWRkZWQnLCB0aGlzLm9uTmV3TWVzc2FnZUFkZGVkKQogICAgICB9CiAgICB9LAogICAgb25TY3JvbGwgKCkgewogICAgICBsZXQgc2Nyb2xsVmFsdWUgPSB0aGlzLiRyZWZzLmNoYXRDb250YWluZXIuc2Nyb2xsVG9wCiAgICAgIGNvbnN0IHRoYXQgPSB0aGlzCiAgICAgIGlmIChzY3JvbGxWYWx1ZSA8IDEwMCAmJiAhdGhpcy5sb2FkaW5nKSB7CiAgICAgICAgdGhpcy50b3RhbENoYXRIZWlnaHQgPSB0aGlzLiRyZWZzLmNoYXRDb250YWluZXIuc2Nyb2xsSGVpZ2h0CiAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZQogICAgICAgIGxldCBjaGF0SUQgPSB0aGlzLmlkCiAgICAgICAgbGV0IGN1cnJlbnRUb3BNZXNzYWdlID0gdGhpcy5jaGF0TWVzc2FnZXNbMF0KICAgICAgICBpZiAoY3VycmVudFRvcE1lc3NhZ2UgPT09IHVuZGVmaW5lZCkgewogICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2UKICAgICAgICAgIHJldHVybgogICAgICAgIH0KICAgICAgICBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZignbWVzc2FnZXMnKS5jaGlsZChjaGF0SUQpLmNoaWxkKCdtZXNzYWdlcycpLm9yZGVyQnlLZXkoKS5lbmRBdChjdXJyZW50VG9wTWVzc2FnZS5rZXkpLmxpbWl0VG9MYXN0KDIwKS5vbmNlKCd2YWx1ZScpLnRoZW4oCiAgICAgICAgICBmdW5jdGlvbiAoc25hcHNob3QpIHsKICAgICAgICAgICAgbGV0IHRlbXBBcnJheSA9IFtdCiAgICAgICAgICAgIHNuYXBzaG90LmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICB0ZW1wQXJyYXkucHVzaChpdGVtKQogICAgICAgICAgICB9KQogICAgICAgICAgICBpZiAodGVtcEFycmF5WzBdLmtleSA9PT0gdGVtcEFycmF5WzFdLmtleSkgcmV0dXJuCiAgICAgICAgICAgIHRlbXBBcnJheS5yZXZlcnNlKCkKICAgICAgICAgICAgdGVtcEFycmF5LmZvckVhY2goZnVuY3Rpb24gKGNoaWxkKSB7IHRoYXQub25OZXdNZXNzYWdlQWRkZWQoY2hpbGQsIGZhbHNlKSB9KQogICAgICAgICAgICB0aGF0LmxvYWRpbmcgPSBmYWxzZQogICAgICAgICAgfQogICAgICAgICkKICAgICAgfQogICAgfSwKICAgIHByb2Nlc3NNZXNzYWdlIChtZXNzYWdlKSB7CiAgICAgIC8qZXNsaW50LWRpc2FibGUgKi8KICAgICAgdmFyIGltYWdlUmVnZXggPSAvKFteXHNcJ10rKS4oPzpqcGd8anBlZ3xnaWZ8cG5nKS9pCiAgICAgIC8qZXNsaW50LWVuYWJsZSAqLwogICAgICBpZiAoaW1hZ2VSZWdleC50ZXN0KG1lc3NhZ2UuY29udGVudCkpIHsKICAgICAgICBtZXNzYWdlLmltYWdlID0gaW1hZ2VSZWdleC5leGVjKG1lc3NhZ2UuY29udGVudClbMF0KICAgICAgfQogICAgICB2YXIgZW1vamlSZWdleCA9IC8oW1x1ezFmMzAwfS1cdXsxZjVmZn1cdXsxZjkwMH0tXHV7MWY5ZmZ9XHV7MWY2MDB9LVx1ezFmNjRmfVx1ezFmNjgwfS1cdXsxZjZmZn1cdXsyNjAwfS1cdXsyNmZmfVx1ezI3MDB9LVx1ezI3YmZ9XHV7MWYxZTZ9LVx1ezFmMWZmfVx1ezFmMTkxfS1cdXsxZjI1MX1cdXsyOTM0fS1cdXsxZjE4ZX1dKS9ndQogICAgICBpZiAoZW1vamlSZWdleC50ZXN0KG1lc3NhZ2UuY29udGVudCkpIHsKICAgICAgICBtZXNzYWdlLmNvbnRlbnQgPSBtZXNzYWdlLmNvbnRlbnQucmVwbGFjZShlbW9qaVJlZ2V4LCAnPHNwYW4gY2xhc3M9ImVtb2ppIj4kMTwvc3Bhbj4nKQogICAgICB9CiAgICAgIHJldHVybiBtZXNzYWdlCiAgICB9LAogICAgc2VuZE1lc3NhZ2UgKCkgewogICAgICBpZiAodGhpcy5jb250ZW50ICE9PSAnJykgewogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdzZW5kTWVzc2FnZScsIHsgdXNlcm5hbWU6IHRoaXMudXNlcm5hbWUsIGNvbnRlbnQ6IHRoaXMuY29udGVudCwgZGF0ZTogbmV3IERhdGUoKS50b1N0cmluZygpLCBjaGF0SUQ6IHRoaXMuaWQgfSkKICAgICAgICB0aGlzLmNvbnRlbnQgPSAnJwogICAgICB9CiAgICB9LAogICAgc2Nyb2xsVG9FbmQgKCkgewogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgdmFyIGNvbnRhaW5lciA9IHRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3IoJy5jaGF0LWNvbnRhaW5lcicpCiAgICAgICAgY29udGFpbmVyLnNjcm9sbFRvcCA9IGNvbnRhaW5lci5zY3JvbGxIZWlnaHQKICAgICAgfSkKICAgIH0sCiAgICBzY3JvbGxUbyAoKSB7CiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICBsZXQgY3VycmVudEhlaWdodCA9IHRoaXMuJHJlZnMuY2hhdENvbnRhaW5lci5zY3JvbGxIZWlnaHQKICAgICAgICBsZXQgZGlmZmVyZW5jZSA9IGN1cnJlbnRIZWlnaHQgLSB0aGlzLnRvdGFsQ2hhdEhlaWdodAogICAgICAgIHZhciBjb250YWluZXIgPSB0aGlzLiRlbC5xdWVyeVNlbGVjdG9yKCcuY2hhdC1jb250YWluZXInKQogICAgICAgIGNvbnRhaW5lci5zY3JvbGxUb3AgPSBkaWZmZXJlbmNlCiAgICAgIH0pCiAgICB9LAogICAgYWRkRW1vamlUb01lc3NhZ2UgKGVtb2ppKSB7CiAgICAgIHRoaXMuY29udGVudCArPSBlbW9qaS52YWx1ZQogICAgfSwKICAgIHRvZ2dsZUVtb2ppUGFuZWwgKCkgewogICAgICB0aGlzLmVtb2ppUGFuZWwgPSAhdGhpcy5lbW9qaVBhbmVsCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chat.vue","sourceRoot":"src/components/Chat","sourcesContent":["<template>\r\n  <v-container fluid style=\"padding: 0;\">\r\n    <v-row no-gutters>\r\n      <v-col sm=\"2\" class=\"scrollable\">\r\n        <chats></chats>\r\n      </v-col>\r\n      <v-col sm=\"10\" style=\"position: relative;\">\r\n        <div class=\"chat-container\" v-on:scroll=\"onScroll\" ref=\"chatContainer\" >\r\n          <message :messages=\"messages\" @imageLoad=\"scrollToEnd\"></message>\r\n        </div>\r\n        <emoji-picker :show=\"emojiPanel\" @close=\"toggleEmojiPanel\" @click=\"addEmojiToMessage\"></emoji-picker>\r\n        <div class=\"typer\">\r\n          <input type=\"text\" placeholder=\"Type here...\" v-on:keyup.enter=\"sendMessage\" v-model=\"content\">\r\n          <v-btn icon class=\"blue--text emoji-panel\" @click=\"toggleEmojiPanel\">\r\n            <v-icon>mdi-emoticon-outline</v-icon>\r\n          </v-btn>\r\n        </div>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\n  import Message from './parts/Message.vue'\r\n  import EmojiPicker from './parts/EmojiPicker.vue'\r\n  import Chats from './parts/Chats.vue'\r\n  import * as firebase from 'firebase'\r\n\r\n  export default {\r\n    data () {\r\n      return {\r\n        content: '',\r\n        chatMessages: [],\r\n        emojiPanel: false,\r\n        currentRef: {},\r\n        loading: false,\r\n        totalChatHeight: 0\r\n      }\r\n    },\r\n    props: [\r\n      'id'\r\n    ],\r\n    mounted () {\r\n      this.loadChat()\r\n      this.$store.dispatch('loadOnlineUsers')\r\n    },\r\n    components: {\r\n      'message': Message,\r\n      'emoji-picker': EmojiPicker,\r\n      'chats': Chats\r\n    },\r\n    computed: {\r\n      messages () {\r\n        return this.chatMessages\r\n      },\r\n      username () {\r\n        return this.$store.getters.user.username\r\n      },\r\n      onNewMessageAdded () {\r\n        const that = this\r\n        let onNewMessageAdded = function (snapshot, newMessage = true) {\r\n          let message = snapshot.val()\r\n          message.key = snapshot.key\r\n          /*eslint-disable */\r\n          var urlPattern = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig\r\n          /*eslint-enable */\r\n          message.content = message.content\r\n            .replace(/&/g, '&amp;')\r\n            .replace(/</g, '&lt;')\r\n            .replace(/>/g, '&gt;')\r\n            .replace(/\"/g, '&quot;')\r\n            .replace(/'/g, '&#039;')\r\n          message.content = message.content.replace(urlPattern, \"<a href='$1'>$1</a>\")\r\n          if (!newMessage) {\r\n            that.chatMessages.unshift(that.processMessage(message))\r\n            that.scrollTo()\r\n          } else {\r\n            that.chatMessages.push(that.processMessage(message))\r\n            that.scrollToEnd()\r\n          }\r\n        }\r\n        return onNewMessageAdded\r\n      }\r\n    },\r\n    watch: {\r\n      '$route.params.id' (newId, oldId) {\r\n        this.currentRef.off('child_added', this.onNewMessageAdded)\r\n        this.loadChat()\r\n      }\r\n    },\r\n    methods: {\r\n      loadChat () {\r\n        this.totalChatHeight = this.$refs.chatContainer.scrollHeight\r\n        this.loading = false\r\n        if (this.id !== undefined) {\r\n          this.chatMessages = []\r\n          let chatID = this.id\r\n          this.currentRef = firebase.database().ref('messages').child(chatID).child('messages').limitToLast(20)\r\n          this.currentRef.on('child_added', this.onNewMessageAdded)\r\n        }\r\n      },\r\n      onScroll () {\r\n        let scrollValue = this.$refs.chatContainer.scrollTop\r\n        const that = this\r\n        if (scrollValue < 100 && !this.loading) {\r\n          this.totalChatHeight = this.$refs.chatContainer.scrollHeight\r\n          this.loading = true\r\n          let chatID = this.id\r\n          let currentTopMessage = this.chatMessages[0]\r\n          if (currentTopMessage === undefined) {\r\n            this.loading = false\r\n            return\r\n          }\r\n          firebase.database().ref('messages').child(chatID).child('messages').orderByKey().endAt(currentTopMessage.key).limitToLast(20).once('value').then(\r\n            function (snapshot) {\r\n              let tempArray = []\r\n              snapshot.forEach(function (item) {\r\n                tempArray.push(item)\r\n              })\r\n              if (tempArray[0].key === tempArray[1].key) return\r\n              tempArray.reverse()\r\n              tempArray.forEach(function (child) { that.onNewMessageAdded(child, false) })\r\n              that.loading = false\r\n            }\r\n          )\r\n        }\r\n      },\r\n      processMessage (message) {\r\n        /*eslint-disable */\r\n        var imageRegex = /([^\\s\\']+).(?:jpg|jpeg|gif|png)/i\r\n        /*eslint-enable */\r\n        if (imageRegex.test(message.content)) {\r\n          message.image = imageRegex.exec(message.content)[0]\r\n        }\r\n        var emojiRegex = /([\\u{1f300}-\\u{1f5ff}\\u{1f900}-\\u{1f9ff}\\u{1f600}-\\u{1f64f}\\u{1f680}-\\u{1f6ff}\\u{2600}-\\u{26ff}\\u{2700}-\\u{27bf}\\u{1f1e6}-\\u{1f1ff}\\u{1f191}-\\u{1f251}\\u{2934}-\\u{1f18e}])/gu\r\n        if (emojiRegex.test(message.content)) {\r\n          message.content = message.content.replace(emojiRegex, '<span class=\"emoji\">$1</span>')\r\n        }\r\n        return message\r\n      },\r\n      sendMessage () {\r\n        if (this.content !== '') {\r\n          this.$store.dispatch('sendMessage', { username: this.username, content: this.content, date: new Date().toString(), chatID: this.id })\r\n          this.content = ''\r\n        }\r\n      },\r\n      scrollToEnd () {\r\n        this.$nextTick(() => {\r\n          var container = this.$el.querySelector('.chat-container')\r\n          container.scrollTop = container.scrollHeight\r\n        })\r\n      },\r\n      scrollTo () {\r\n        this.$nextTick(() => {\r\n          let currentHeight = this.$refs.chatContainer.scrollHeight\r\n          let difference = currentHeight - this.totalChatHeight\r\n          var container = this.$el.querySelector('.chat-container')\r\n          container.scrollTop = difference\r\n        })\r\n      },\r\n      addEmojiToMessage (emoji) {\r\n        this.content += emoji.value\r\n      },\r\n      toggleEmojiPanel () {\r\n        this.emojiPanel = !this.emojiPanel\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .scrollable {\r\n    overflow-y: auto;\r\n    height: 90vh;\r\n  }\r\n  .typer{\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    align-items: center;\r\n    bottom: 0;\r\n    height: 4.9rem;\r\n    width: 100%;\r\n    background-color: #fff;\r\n    box-shadow: 0 -5px 10px -5px rgba(0,0,0,.2);\r\n  }\r\n  .typer input[type=text]{\r\n    position: absolute;\r\n    left: 2.5rem;\r\n    padding: 1rem;\r\n    width: 80%;\r\n    background-color: transparent;\r\n    border: none;\r\n    outline: none;\r\n    font-size: 1.25rem;\r\n  }\r\n  .chat-container{\r\n    box-sizing: border-box;\r\n    height: calc(100vh - 9.5rem);\r\n    overflow-y: auto;\r\n    padding: 10px;\r\n    background-color: #f2f2f2;\r\n  }\r\n  .message{\r\n    margin-bottom: 3px;\r\n  }\r\n  .message.own{\r\n    text-align: right;\r\n  }\r\n  .message.own .content{\r\n    background-color: lightskyblue;\r\n  }\r\n  .chat-container .username{\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n  }\r\n  .chat-container .content{\r\n    padding: 8px;\r\n    background-color: lightgreen;\r\n    border-radius: 10px;\r\n    display:inline-block;\r\n    box-shadow: 0 1px 3px 0 rgba(0,0,0,0.2), 0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12);\r\n    max-width: 50%;\r\n    word-wrap: break-word;\r\n    }\r\n  @media (max-width: 480px) {\r\n    .chat-container .content{\r\n      max-width: 60%;\r\n    }\r\n  }\r\n\r\n</style>\r\n"]}]}