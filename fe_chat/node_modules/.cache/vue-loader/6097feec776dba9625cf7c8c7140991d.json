{"remainingRequest":"C:\\SSAFY\\git\\s03p23b304\\fe_chat\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\SSAFY\\git\\s03p23b304\\fe_chat\\src\\components\\Chat\\Chat.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\SSAFY\\git\\s03p23b304\\fe_chat\\src\\components\\Chat\\Chat.vue","mtime":1600910340540},{"path":"C:\\SSAFY\\git\\s03p23b304\\fe_chat\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\SSAFY\\git\\s03p23b304\\fe_chat\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\SSAFY\\git\\s03p23b304\\fe_chat\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\SSAFY\\git\\s03p23b304\\fe_chat\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\SSAFY\\git\\s03p23b304\\fe_chat\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\SSAFY\\git\\s03p23b304\\fe_chat\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnNjcm9sbGFibGUgewogIG92ZXJmbG93LXk6IGF1dG87CiAgaGVpZ2h0OiA5MHZoOwp9Ci50eXBlcnsKICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBib3R0b206IDA7CiAgaGVpZ2h0OiA0LjlyZW07CiAgd2lkdGg6IDEwMCU7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICBib3gtc2hhZG93OiAwIC01cHggMTBweCAtNXB4IHJnYmEoMCwwLDAsLjIpOwp9Ci50eXBlciBpbnB1dFt0eXBlPXRleHRdewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBsZWZ0OiAyLjVyZW07CiAgcGFkZGluZzogMXJlbTsKICB3aWR0aDogODAlOwogIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OwogIGJvcmRlcjogbm9uZTsKICBvdXRsaW5lOiBub25lOwogIGZvbnQtc2l6ZTogMS4yNXJlbTsKfQouY2hhdC1jb250YWluZXJ7CiAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA5LjVyZW0pOwogIG92ZXJmbG93LXk6IGF1dG87CiAgcGFkZGluZzogMTBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyOwp9Ci5tZXNzYWdlewogIG1hcmdpbi1ib3R0b206IDNweDsKfQoubWVzc2FnZS5vd257CiAgdGV4dC1hbGlnbjogcmlnaHQ7Cn0KLm1lc3NhZ2Uub3duIC5jb250ZW50ewogIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0c2t5Ymx1ZTsKfQouY2hhdC1jb250YWluZXIgLnVzZXJuYW1lewogIGZvbnQtc2l6ZTogMThweDsKICBmb250LXdlaWdodDogYm9sZDsKfQouY2hhdC1jb250YWluZXIgLmNvbnRlbnR7CiAgcGFkZGluZzogOHB4OwogIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JlZW47CiAgYm9yZGVyLXJhZGl1czogMTBweDsKICBkaXNwbGF5OmlubGluZS1ibG9jazsKICBib3gtc2hhZG93OiAwIDFweCAzcHggMCByZ2JhKDAsMCwwLDAuMiksIDAgMXB4IDFweCAwIHJnYmEoMCwwLDAsMC4xNCksIDAgMnB4IDFweCAtMXB4IHJnYmEoMCwwLDAsMC4xMik7CiAgbWF4LXdpZHRoOiA1MCU7CiAgd29yZC13cmFwOiBicmVhay13b3JkOwogIH0KQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7CiAgLmNoYXQtY29udGFpbmVyIC5jb250ZW50ewogICAgbWF4LXdpZHRoOiA2MCU7CiAgfQp9Cgo="},{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chat.vue","sourceRoot":"src/components/Chat","sourcesContent":["<template>\r\n  <v-container fluid style=\"padding: 0;\">\r\n    <v-row no-gutters>\r\n      <v-col sm=\"2\" class=\"scrollable\">\r\n        <chats></chats>\r\n      </v-col>\r\n      <v-col sm=\"10\" style=\"position: relative;\">\r\n        <div class=\"chat-container\" v-on:scroll=\"onScroll\" ref=\"chatContainer\" >\r\n          <message :messages=\"messages\" @imageLoad=\"scrollToEnd\"></message>\r\n        </div>\r\n        <emoji-picker :show=\"emojiPanel\" @close=\"toggleEmojiPanel\" @click=\"addEmojiToMessage\"></emoji-picker>\r\n        <div class=\"typer\">\r\n          <input type=\"text\" placeholder=\"Type here...\" v-on:keyup.enter=\"sendMessage\" v-model=\"content\">\r\n          <v-btn icon class=\"blue--text emoji-panel\" @click=\"toggleEmojiPanel\">\r\n            <v-icon>mdi-emoticon-outline</v-icon>\r\n          </v-btn>\r\n        </div>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\n  import Message from './parts/Message.vue'\r\n  import EmojiPicker from './parts/EmojiPicker.vue'\r\n  import Chats from './parts/Chats.vue'\r\n  import * as firebase from 'firebase'\r\n\r\n  export default {\r\n    data () {\r\n      return {\r\n        content: '',\r\n        chatMessages: [],\r\n        emojiPanel: false,\r\n        currentRef: {},\r\n        loading: false,\r\n        totalChatHeight: 0\r\n      }\r\n    },\r\n    props: [\r\n      'id'\r\n    ],\r\n    mounted () {\r\n      this.loadChat()\r\n      this.$store.dispatch('loadOnlineUsers')\r\n    },\r\n    components: {\r\n      'message': Message,\r\n      'emoji-picker': EmojiPicker,\r\n      'chats': Chats\r\n    },\r\n    computed: {\r\n      messages () {\r\n        return this.chatMessages\r\n      },\r\n      username () {\r\n        return this.$store.getters.user.username\r\n      },\r\n      onNewMessageAdded () {\r\n        const that = this\r\n        let onNewMessageAdded = function (snapshot, newMessage = true) {\r\n          let message = snapshot.val()\r\n          message.key = snapshot.key\r\n          /*eslint-disable */\r\n          var urlPattern = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig\r\n          /*eslint-enable */\r\n          message.content = message.content\r\n            .replace(/&/g, '&amp;')\r\n            .replace(/</g, '&lt;')\r\n            .replace(/>/g, '&gt;')\r\n            .replace(/\"/g, '&quot;')\r\n            .replace(/'/g, '&#039;')\r\n          message.content = message.content.replace(urlPattern, \"<a href='$1'>$1</a>\")\r\n          if (!newMessage) {\r\n            that.chatMessages.unshift(that.processMessage(message))\r\n            that.scrollTo()\r\n          } else {\r\n            that.chatMessages.push(that.processMessage(message))\r\n            that.scrollToEnd()\r\n          }\r\n        }\r\n        return onNewMessageAdded\r\n      }\r\n    },\r\n    watch: {\r\n      '$route.params.id' (newId, oldId) {\r\n        this.currentRef.off('child_added', this.onNewMessageAdded)\r\n        this.loadChat()\r\n      }\r\n    },\r\n    methods: {\r\n      loadChat () {\r\n        this.totalChatHeight = this.$refs.chatContainer.scrollHeight\r\n        this.loading = false\r\n        if (this.id !== undefined) {\r\n          this.chatMessages = []\r\n          let chatID = this.id\r\n          this.currentRef = firebase.database().ref('messages').child(chatID).child('messages').limitToLast(20)\r\n          this.currentRef.on('child_added', this.onNewMessageAdded)\r\n        }\r\n      },\r\n      onScroll () {\r\n        let scrollValue = this.$refs.chatContainer.scrollTop\r\n        const that = this\r\n        if (scrollValue < 100 && !this.loading) {\r\n          this.totalChatHeight = this.$refs.chatContainer.scrollHeight\r\n          this.loading = true\r\n          let chatID = this.id\r\n          let currentTopMessage = this.chatMessages[0]\r\n          if (currentTopMessage === undefined) {\r\n            this.loading = false\r\n            return\r\n          }\r\n          firebase.database().ref('messages').child(chatID).child('messages').orderByKey().endAt(currentTopMessage.key).limitToLast(20).once('value').then(\r\n            function (snapshot) {\r\n              let tempArray = []\r\n              snapshot.forEach(function (item) {\r\n                tempArray.push(item)\r\n              })\r\n              if (tempArray[0].key === tempArray[1].key) return\r\n              tempArray.reverse()\r\n              tempArray.forEach(function (child) { that.onNewMessageAdded(child, false) })\r\n              that.loading = false\r\n            }\r\n          )\r\n        }\r\n      },\r\n      processMessage (message) {\r\n        /*eslint-disable */\r\n        var imageRegex = /([^\\s\\']+).(?:jpg|jpeg|gif|png)/i\r\n        /*eslint-enable */\r\n        if (imageRegex.test(message.content)) {\r\n          message.image = imageRegex.exec(message.content)[0]\r\n        }\r\n        var emojiRegex = /([\\u{1f300}-\\u{1f5ff}\\u{1f900}-\\u{1f9ff}\\u{1f600}-\\u{1f64f}\\u{1f680}-\\u{1f6ff}\\u{2600}-\\u{26ff}\\u{2700}-\\u{27bf}\\u{1f1e6}-\\u{1f1ff}\\u{1f191}-\\u{1f251}\\u{2934}-\\u{1f18e}])/gu\r\n        if (emojiRegex.test(message.content)) {\r\n          message.content = message.content.replace(emojiRegex, '<span class=\"emoji\">$1</span>')\r\n        }\r\n        return message\r\n      },\r\n      sendMessage () {\r\n        if (this.content !== '') {\r\n          this.$store.dispatch('sendMessage', { username: this.username, content: this.content, date: new Date().toString(), chatID: this.id })\r\n          this.content = ''\r\n        }\r\n      },\r\n      scrollToEnd () {\r\n        this.$nextTick(() => {\r\n          var container = this.$el.querySelector('.chat-container')\r\n          container.scrollTop = container.scrollHeight\r\n        })\r\n      },\r\n      scrollTo () {\r\n        this.$nextTick(() => {\r\n          let currentHeight = this.$refs.chatContainer.scrollHeight\r\n          let difference = currentHeight - this.totalChatHeight\r\n          var container = this.$el.querySelector('.chat-container')\r\n          container.scrollTop = difference\r\n        })\r\n      },\r\n      addEmojiToMessage (emoji) {\r\n        this.content += emoji.value\r\n      },\r\n      toggleEmojiPanel () {\r\n        this.emojiPanel = !this.emojiPanel\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .scrollable {\r\n    overflow-y: auto;\r\n    height: 90vh;\r\n  }\r\n  .typer{\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    align-items: center;\r\n    bottom: 0;\r\n    height: 4.9rem;\r\n    width: 100%;\r\n    background-color: #fff;\r\n    box-shadow: 0 -5px 10px -5px rgba(0,0,0,.2);\r\n  }\r\n  .typer input[type=text]{\r\n    position: absolute;\r\n    left: 2.5rem;\r\n    padding: 1rem;\r\n    width: 80%;\r\n    background-color: transparent;\r\n    border: none;\r\n    outline: none;\r\n    font-size: 1.25rem;\r\n  }\r\n  .chat-container{\r\n    box-sizing: border-box;\r\n    height: calc(100vh - 9.5rem);\r\n    overflow-y: auto;\r\n    padding: 10px;\r\n    background-color: #f2f2f2;\r\n  }\r\n  .message{\r\n    margin-bottom: 3px;\r\n  }\r\n  .message.own{\r\n    text-align: right;\r\n  }\r\n  .message.own .content{\r\n    background-color: lightskyblue;\r\n  }\r\n  .chat-container .username{\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n  }\r\n  .chat-container .content{\r\n    padding: 8px;\r\n    background-color: lightgreen;\r\n    border-radius: 10px;\r\n    display:inline-block;\r\n    box-shadow: 0 1px 3px 0 rgba(0,0,0,0.2), 0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12);\r\n    max-width: 50%;\r\n    word-wrap: break-word;\r\n    }\r\n  @media (max-width: 480px) {\r\n    .chat-container .content{\r\n      max-width: 60%;\r\n    }\r\n  }\r\n\r\n</style>\r\n"]}]}